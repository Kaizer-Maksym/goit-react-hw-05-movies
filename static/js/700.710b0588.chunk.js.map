{"version":3,"file":"static/js/700.710b0588.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieCard = styled.div`\n  padding: 20px 30px 0 30px;\n  width: 1280px;\n`;\n\nexport const LinkBtn = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 5px;\n  color: #ffffff;\n\n  width: 120px;\n  height: 40px;\n  padding: 5px;\n\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 16px;\n\n  margin-bottom: 20px;\n  background-color: rgb(255, 107, 8);\n\n  box-shadow: 2px 2px 0px rgba(0, 0, 0, 0.1), 2px 2px 0px rgba(0, 0, 0, 0.2),\n    2px 2px 0px rgba(0, 0, 0, 0.2);\n\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: rgb(255, 107, 8);\n    background-color: #ffffff;\n    border: 2px solid rgb(255, 107, 8);\n\n    svg {\n      fill: rgb(255, 107, 8);\n    }\n  }\n`;\n\nexport const FilmReview = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  column-gap: 20px;\n`;\n\nexport const FilmMeta = styled.div`\n  display: grid;\n  row-gap: 20px;\n`;\n\nexport const FilmTitle = styled.h2`\n  margin: 0;\n  padding: 0;\n\n  font-size: 30px;\n  font-weight: 600px;\n  text-transform: uppercase;\n`;\n\nexport const SectionHeading = styled.h3`\n  margin: 0;\n  padding: 0;\n\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const FilmInfo = styled.p`\n  margin: 0;\n  font-size: 16px;\n  font-weight: 400;\n`;\n\nexport const Link = styled(NavLink)`\n  color: rgb(255, 107, 8);\n  font-weight: 500;\n  font-size: 16px;\n  text-decoration: none;\n  padding-bottom: 5px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: #2193f6;\n  }\n\n  &:hover:not(.active) {\n    color: #2193f6;\n  }\n`;\n\nexport const CreditsList = styled.ul`\n  display: flex;\n  align-items: center;\n\n  column-gap: 15px;\n  list-style: none;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/api';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nimport {\n  LinkBtn,\n  MovieCard,\n  FilmReview,\n  FilmMeta,\n  FilmTitle,\n  SectionHeading,\n  FilmInfo,\n  Link,\n  CreditsList,\n} from './MovieDetails.styled';\n\nlet imageURL = 'https://image.tmdb.org/t/p/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  const backLinkHref = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    try {\n      fetchMovieDetails(movieId).then(setMovie);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <MovieCard>\n          <LinkBtn to={backLinkHref}>\n            <BsArrowLeft size=\"25px\" color=\"#ffffff\" style={{}} />\n            Go back\n          </LinkBtn>\n          <FilmReview>\n            <div>\n              <img\n                width=\"300\"\n                src={`${imageURL}w342${movie.poster_path}`}\n                alt={movie.title}\n                loading=\"lazy\"\n              />\n            </div>\n            <FilmMeta>\n              <FilmTitle>{movie.title}</FilmTitle>\n              <FilmInfo>\n                User score: {(movie.vote_average * 10).toFixed(1)} %\n              </FilmInfo>\n              <SectionHeading>Overview</SectionHeading>\n              <FilmInfo>{movie.overview}</FilmInfo>\n              <SectionHeading>Genres:</SectionHeading>\n              <FilmInfo>\n                {movie.genres.map(({ name }) => name).join(' ')}\n              </FilmInfo>\n            </FilmMeta>\n          </FilmReview>\n        </MovieCard>\n      )}\n      <hr />\n      <CreditsList>\n        <li>\n          {location.state !== null ? (\n            <Link to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </Link>\n          ) : (\n            <Link to=\"cast\">Cast</Link>\n          )}\n        </li>\n        <li>\n          {location.state !== null ? (\n            <Link to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </Link>\n          ) : (\n            <Link to=\"reviews\">Reviews</Link>\n          )}\n        </li>\n      </CreditsList>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_DETAIL_URL = 'https://api.themoviedb.org/3/movie';\n\nconst KEY = '4cd68e7e48cde1cabd477e22c5e05053';\n\nexport const getTrending = async page => {\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}&page=${page}`);\n  return response.data;\n};\n\nexport const fetchFilm = async (query, page) => {\n  const response = await axios.get(\n    `${SEARCH_URL}?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US&`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const response = await axios.get(\n    `${BASE_DETAIL_URL}/${id}/credits?api_key=${KEY}&language=en-US&`\n  );\n  return response.data.cast;\n};\n\nexport const fetshReviews = async id => {\n  const response = await axios.get(\n    `${BASE_DETAIL_URL}/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["MovieCard","styled","LinkBtn","NavLink","FilmReview","FilmMeta","FilmTitle","SectionHeading","FilmInfo","Link","CreditsList","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","fetchMovieDetails","then","error","console","log","to","size","color","style","width","src","poster_path","alt","title","loading","vote_average","toFixed","overview","genres","map","name","join","Suspense","BASE_DETAIL_URL","KEY","getTrending","page","axios","response","data","fetchFilm","query","results","id","fetchActors","cast","fetshReviews"],"sourceRoot":""}