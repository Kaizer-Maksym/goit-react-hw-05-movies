{"version":3,"file":"static/js/199.3142ee59.chunk.js","mappings":"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","sources":["components/PageHeading/PageHeading.styled.jsx","components/PageHeading/PageHeadingg.jsx","components/HomeGallery/HomeGallery.styled.jsx","components/HomeGallery/HomeGallery.jsx","components/Pagination/Pagination.jsx","Pages/Home.jsx","components/ScrollTop/Scroll.styled.jsx","components/ScrollTop/ScrollTop.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageHead = styled.h1`\n  margin: 0;\n  padding: 0;\n  font-size: 36px;\n  font-weight: 700;\n  color: rgb(255, 107, 8);\n  text-transform: uppercase;\n  margin-bottom: 15px;\n  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.8), 4px 4px 4px rgba(0, 0, 0, 0.1),\n    1px 4px 6px rgba(0, 0, 0, 0.1);\n\n  text-align: center;\n`;\n","import React from 'react';\nimport { PageHead } from './PageHeading.styled';\n\nexport const PageHeading = () => {\n  return <PageHead>Trending today</PageHead>;\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 30px 100px;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n\n  grid-template-columns: repeat(auto-fit, minmax(200px, 240px));\n  grid-template-rows: repeat(4, 1fr);\n  grid-gap: 20px;\n\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: grid;\n  row-gap: 5px;\n\n  transition: 250ms linear;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const LinlText = styled.span`\n  display: block;\n\n  text-decoration: none;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 500;\n  color: rgb(255, 107, 8);\n`;\n\nexport const ListImg = styled.img`\n  display: block;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n\n  :hover {\n    box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3), 4px 4px 4px rgba(0, 0, 0, 0.3),\n      1px 4px 6px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListImg } from './HomeGallery.styled';\n\nlet IMG_URL = 'https://image.tmdb.org/t/p/';\n\nconst HomeGallery = ({ movies }) => {\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <ListItem key={id}>\n              <Link to={`/movies/${id}`}>\n                <ListImg\n                  height=\"100%\"\n                  loading=\"leasy\"\n                  src={`${IMG_URL}w342${poster_path}`}\n                  alt={title}\n                />\n              </Link>\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n};\nHomeGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default HomeGallery;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\n\nexport default function BasicPagination({ totalPage, onChange }) {\n  const [page, setPage] = useState(1);\n\n  const handleChange = (event, value) => {\n    setPage(value);\n    onChange(value);\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        paddingBottom: '20px',\n      }}\n    >\n      <Stack spacing={2}>\n        <Pagination\n          count={totalPage}\n          page={page}\n          color=\"warning\"\n          size=\"large\"\n          onChange={handleChange}\n        />\n      </Stack>\n    </div>\n  );\n}\n\nBasicPagination.propTypes = {\n  totalPage: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\n// ---API request\nimport { getTrending } from '../services/api';\n// ---Components\nimport { PageHeading } from '../components/PageHeading/PageHeadingg';\nimport ScrollTop from 'components/ScrollTop/ScrollTop';\nimport { Container } from '../components/HomeGallery/HomeGallery.styled';\nimport HomeGallery from 'components/HomeGallery/HomeGallery';\nimport BasicPagination from '../components/Pagination/Pagination';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n\n  useEffect(() => {\n    if (!page) {\n      return;\n    } else {\n      try {\n        getTrending(page).then(resp => {\n          setTotalPage(resp.total_pages);\n          setMovies(resp.results);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [page]);\n\n  return (\n    <>\n      <Container>\n        <PageHeading />\n        <HomeGallery movies={movies} />\n        <ScrollTop query={movies} />\n      </Container>\n      <BasicPagination totalPage={totalPage} onChange={setPage} />\n    </>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  position: fixed;\n  bottom: 5px;\n  right: 5px;\n  width: 50px;\n  height: 50px;\n  border: none;\n  outline: none;\n  border-radius: 50%;\n  background-color: transparent;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: rgb(255, 107, 8);\n    svg {\n      fill: #ffffff;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BsFillArrowUpCircleFill } from 'react-icons/bs';\nimport { Button } from './Scroll.styled';\n\nconst ScrollTop = ({ query }) => {\n  const [visible, setVisible] = useState(false);\n\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 100) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    if (query === [] && null) {\n      return;\n    }\n    window.addEventListener('scroll', toggleVisibility);\n\n    return () => {\n      window.removeEventListener('scroll', toggleVisibility);\n    };\n  }, [query]);\n\n  return (\n    <>\n      {visible ? (\n        <Button type=\"button\" onClick={scrollTop}>\n          <BsFillArrowUpCircleFill size=\"100%\" color=\"rgb(255, 107, 8)\" />\n        </Button>\n      ) : null}\n    </>\n  );\n};\n\nScrollTop.propTypes = {\n  query: PropTypes.arrayOf(PropTypes.shape),\n};\n\nexport default ScrollTop;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_DETAIL_URL = 'https://api.themoviedb.org/3/movie';\n\nconst KEY = '4cd68e7e48cde1cabd477e22c5e05053';\n\nexport const getTrending = async page => {\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}&page=${page}`);\n  return response.data;\n};\n\nexport const fetchFilm = async (query, page) => {\n  const response = await axios.get(\n    `${SEARCH_URL}?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US&`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const response = await axios.get(\n    `${BASE_DETAIL_URL}/${id}/credits?api_key=${KEY}&language=en-US&`\n  );\n  return response.data.cast;\n};\n\nexport const fetshReviews = async id => {\n  const response = await axios.get(\n    `${BASE_DETAIL_URL}/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["PageHead","styled","PageHeading","Container","List","ListItem","ListImg","movies","map","id","title","poster_path","to","height","loading","src","alt","BasicPagination","totalPage","onChange","useState","page","setPage","style","display","justifyContent","paddingBottom","Stack","spacing","Pagination","count","color","size","event","value","setMovies","setTotalPage","useEffect","getTrending","then","resp","total_pages","results","error","console","log","ScrollTop","query","Button","visible","setVisible","toggleVisibility","window","pageYOffset","addEventListener","removeEventListener","type","onClick","scrollTo","top","behavior","BASE_DETAIL_URL","KEY","axios","response","data","fetchFilm","fetchMovieDetails","fetchActors","cast","fetshReviews"],"sourceRoot":""}