{"version":3,"file":"static/js/285.566e02ec.chunk.js","mappings":"qNAEaA,EAAcC,EAAAA,EAAAA,GAAH,iEAKXC,EAAgBD,EAAAA,EAAAA,GAAH,qFAMbE,EAAeF,EAAAA,EAAAA,GAAH,0C,SCwBzB,EAhCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAaN,GAASO,KAAKH,GAC3B,MAAOI,GACPC,QAAQC,IAAIF,MAEb,CAACR,KAGF,0BACE,SAACD,EAAD,UACGI,EAAQQ,OAAS,EAChBR,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAACjB,EAAD,YACE,SAACF,EAAD,4BAAyBkB,MACzB,uBAAIC,EAAQC,QAAQ,wCAA0B,SAF5BH,OAOxB,0E,yMC1BJI,EAAkB,qCAElBC,EAAM,mCAECC,EAAW,mCAAG,WAAMC,GAAN,uFACFC,IAAAA,IAAA,UAPR,kDAOQ,oBAAiCH,EAAjC,iBAA6CE,IAD3C,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXC,EAAS,mCAAG,WAAOC,EAAOL,GAAd,uFACAC,IAAAA,IAAA,UAXN,4CAWM,oBACIH,EADJ,iCACgCO,EADhC,iBAC8CL,EAD9C,yBADA,cACjBE,EADiB,yBAIhBA,EAASC,KAAKG,SAJE,2CAAH,wDAOTC,EAAiB,mCAAG,WAAMd,GAAN,uFACRQ,IAAAA,IAAA,6CACiBR,EADjB,oBAC+BK,EAD/B,qBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAW,mCAAG,WAAMf,GAAN,uFACFQ,IAAAA,IAAA,UAClBJ,EADkB,YACCJ,EADD,4BACuBK,EADvB,qBADE,cACnBI,EADmB,yBAIlBA,EAASC,KAAKM,MAJI,2CAAH,sDAOXvB,EAAY,mCAAG,WAAMO,GAAN,uFACHQ,IAAAA,IAAA,UAClBJ,EADkB,YACCJ,EADD,4BACuBK,EADvB,2BADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKG,SAJK,2CAAH","sources":["Pages/Reviews/Reviews.styled.jsx","Pages/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewAthor = styled.h3`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const ReviewContent = styled.li`\n  display: grid;\n  row-gap: 15px;\n  padding-bottom: 15px;\n`;\n\nexport const TxtContainer = styled.ul`\n  width: 1200px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetshReviews } from '../../services/api';\nimport { ReviewAthor, ReviewContent, TxtContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      fetshReviews(movieId).then(setReviews);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      <TxtContainer>\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content }) => {\n            return (\n              <ReviewContent key={id}>\n                <ReviewAthor>{`Author: ${author}`}</ReviewAthor>\n                <p>{content.replace(/[^a-zа-яё0-9.,/'<>-]/gi, ' ')}</p>\n              </ReviewContent>\n            );\n          })\n        ) : (\n          <p>We don`t have any reviews for this movie</p>\n        )}\n      </TxtContainer>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_DETAIL_URL = 'https://api.themoviedb.org/3/movie';\n\nconst KEY = '4cd68e7e48cde1cabd477e22c5e05053';\n\nexport const getTrending = async page => {\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}&page=${page}`);\n  return response.data;\n};\n\nexport const fetchFilm = async (query, page) => {\n  const response = await axios.get(\n    `${SEARCH_URL}?api_key=${KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US&`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const response = await axios.get(\n    `${BASE_DETAIL_URL}/${id}/credits?api_key=${KEY}&language=en-US&`\n  );\n  return response.data.cast;\n};\n\nexport const fetshReviews = async id => {\n  const response = await axios.get(\n    `${BASE_DETAIL_URL}/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["ReviewAthor","styled","ReviewContent","TxtContainer","movieId","useParams","useState","reviews","setReviews","useEffect","fetshReviews","then","error","console","log","length","map","id","author","content","replace","BASE_DETAIL_URL","KEY","getTrending","page","axios","response","data","fetchFilm","query","results","fetchMovieDetails","fetchActors","cast"],"sourceRoot":""}